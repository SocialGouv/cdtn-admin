// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should generate dev restore for prod cluster 1`] = `
"---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    kapp.k14s.io/update-strategy: skip
  labels:
    component: prod-cdtn-admin
    application: prod-cdtn-admin
    owner: cdtn-admin
    team: cdtn-admin
  name: restore-container-master
  namespace: cdtn-admin
spec:
  backoffLimit: 0
  template:
    metadata:
      annotations:
        kapp.k14s.io/deploy-logs: for-new-or-existing
    spec:
      containers:
        - command:
            - sh
            - '-c'
            - >+


              [ ! -z $SOURCE_CONTAINER ] || (echo \\"No SOURCE_CONTAINER\\"; exit 1)

              [ ! -z $SOURCE_ACCOUNT_NAME ] || (echo \\"No SOURCE_ACCOUNT_NAME\\";
              exit 1)

              [ ! -z $SOURCE_ACCOUNT_KEY ] || (echo \\"No SOURCE_ACCOUNT_KEY\\";
              exit 1)

              [ ! -z $DESTINATION_CONTAINER ] || (echo \\"No
              DESTINATION_CONTAINER\\"; exit 1)

              [ ! -z $DESTINATION_ACCOUNT_NAME ] || (echo \\"No
              DESTINATION_ACCOUNT_NAME\\"; exit 1)

              [ ! -z $DESTINATION_ACCOUNT_KEY ] || (echo \\"No
              DESTINATION_ACCOUNT_KEY\\"; exit 1)



              echo \\"starting restore container $SOURCE_CONTAINER into
              $DESTINATION_CONTAINER\\"


              # copy container

              az storage copy -r   --source-account-name
              \\"$SOURCE_ACCOUNT_NAME\\"   --source-account-key
              \\"$SOURCE_ACCOUNT_KEY\\"   --source-container \\"$SOURCE_CONTAINER\\"  
              --account-name \\"$DESTINATION_ACCOUNT_NAME\\"   --account-key
              \\"$DESTINATION_ACCOUNT_KEY\\"   --destination-container
              \\"$DESTINATION_CONTAINER\\"


              # get original permission

              PUBLIC_ACCESS=\`az storage container show-permission  
              --account-name \\"$SOURCE_ACCOUNT_NAME\\"   --account-key
              \\"$SOURCE_ACCOUNT_KEY\\"   --name $SOURCE_CONTAINER | jq -r
              \\".publicAccess\\"\`


              # set original permission

              az storage container set-permission   --name
              $DESTINATION_CONTAINER   --account-name
              \\"$DESTINATION_ACCOUNT_NAME\\"   --account-key
              \\"$DESTINATION_ACCOUNT_KEY\\"   --public-access $PUBLIC_ACCESS

          env:
            - name: SOURCE_ACCOUNT_NAME
              valueFrom:
                secretKeyRef:
                  key: azurestorageaccountname
                  name: azure-cdtnadmindev-volume
            - name: SOURCE_ACCOUNT_KEY
              valueFrom:
                secretKeyRef:
                  key: azurestorageaccountkey
                  name: azure-cdtnadmindev-volume
            - name: DESTINATION_ACCOUNT_NAME
              valueFrom:
                secretKeyRef:
                  key: azurestorageaccountname
                  name: azure-cdtnadmindev-volume
            - name: DESTINATION_ACCOUNT_KEY
              valueFrom:
                secretKeyRef:
                  key: azurestorageaccountkey
                  name: azure-cdtnadmindev-volume
            - name: SOURCE_CONTAINER
              value: cdtn
            - name: DESTINATION_CONTAINER
              value: cdtn-dev
          envFrom: []
          image: mcr.microsoft.com/azure-cli:2.15.1
          imagePullPolicy: IfNotPresent
          name: restore-db
          resources:
            limits:
              cpu: 300m
              memory: 512Mi
            requests:
              cpu: 50m
              memory: 64Mi
      restartPolicy: Never
  ttlSecondsAfterFinished: 86400
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  annotations: {}
  name: azure-cdtnadmindev-volume
  namespace: cdtn-admin
spec:
  encryptedData:
    azurestorageaccountkey: >-
      AgAFpMndUw7Mo4QLdKCaW+mOLMauIXGu+cHv9F4sEbsVBnGy/oXmuBVU6hNiXJ/58JHSXSVsnpp8qYu9GhAHdQmN5crWmWDqfqgXd/03iH80QFyR+0PMMQZwsAqsnbzoox8SlghhwiwazdCB2y0C0VsxCd7sSC1uD+t9BUlIX1vRRTosUrZwD3SfKQI3otEXze+/fyo6pEnxMfvTs/fPZtIn4ixt8JL3hrLEDpavjLScIf1VgPlxG7+LC2CYcAeQ+k5hmtlLIFrjYRwlOEhrRNDCbgjEtOzVPuT3cCYAfuC8rFa4QW0kSRH8SRd4azQfNKfZNsUH8/bCq91h2zDRNpVSCm/ZWSQZYFPhmgRMlvqUNEqBAURQUUE1FwkNohr02jBeISrm4PW/7cSdoIhJ5Q7kXle2PzmC+Cv1n9y67OlCtxHSqOik+rCH2ryqoY+sKgoAISVvVWyhAf5/1VWqKudQDkJpbAyV7zh9orRbgKohtjAxFRdWK/+YplEDC/xWI8FnZd26PS5Cs/hRByDf5EVmDFNir64lPJ5kHYyLnFxF50RD9UQRPJ6qGRLO3gEYKRfle6Vox00lZ9y/ck2MAJo6/ZChksclBQYMC++Ky69zlQhQu1WzQGxV5iQRTDwQSHdzcHvEF7HEM390Fq6bglib00VOVx7wYFS4TgcrEgwKYIt1bkvtea204W8/6yn5WYZN8OiLElDmVy+0xcHVUwokdPlGEkR6YepI2dircEj89WzFELN7M2J4wbaEqkVODnEe8itGl+yhXiYDpsPzVnGulRwdNhIfWbf8Hq9ILY8GbXO6LdG4dJhL
    azurestorageaccountname: >-
      AgBm39+zb0dIlbRiM17Cg++XLr04EzShAbwHORvltWJE1HWGvCEMIFuEFjD2NOCuScOGK6b2abqLOadoDnENC+3HKwjwNQKRADL/TCX0bW4DMCJJ4RabMXalaaq19BSa1lN2yMgW1TO+lwVibiIxIpEbbYGpbL+U07Qraf5cNi9O+2Pc6hXmVWDoTi2Op9pEa0aYhKq1wIxB4B4kowH5RjsskdlXy2Gf2pf5QL4EFVBae8MMwH2INsJc/R90tuIGSwgr+FQ13iD1E3sEGi1VBqAcIRwA99UVUbsDVQc6Li/ENbJuS5JR9wPRqfvr+D5O5n+iRcYbDabo7R+bLIm0IdgAmIvREGmAHmq81Z6txWiJeUIsRZ3BldN9JGnU1fUpmA78TVhfpq42zy6q2EDvjIc91CL0jIJNI2mGljha2T1/gy2vqnIbTDj0zHBVajPEO+26vlUSd9zmDETf4Km3V2tYblUIiDuZwqH2hiiQz4lf1UYqF2sS5XlxcXBBP98YaLHNt0S5N/k1avH/XuaJbPyMyU9ZKE1IXWYTLnoMVnPM+/lD0J9xfeZJ3gLeLtjilARlk6FdzDx5W7IH4u9sdFEktnKq8NXRhkeYXb3CHtSjxYy1PfF6tSOCP9DIaZMcK2Z9Vqivis3+ZbFqxe9vWU92xzRg5ZsPr+AkXHnPOLKvt/SCnjRLT5taJVCBfvOSEXkg3tDKk2DWFczzpHA=
  template:
    metadata:
      annotations: {}
      name: azure-cdtnadmindev-volume
    type: Opaque
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  annotations: {}
  name: azure-cdtnadminprod-volume
  namespace: cdtn-admin
spec:
  encryptedData:
    azurestorageaccountkey: >-
      AgArMu861qm2F7g/QpkOUqz4BAM+AIwuAXsE2PpJMNKKmZz/Pbyg3oIMfdcqg8e3rss7PpddLbZv+TYFCC8HuVIrQ9u5gA1t2HN0qjDGBsDyWr7cF2I+eB71JN287MoOeG90hF+TfkHh3bONZTDEwOT+sYs6XSDm4EsXEE7kkUk0yJjUA0s5uXZYI33dteRWPYMp7KaG73RWl6CW0/woKwnX5ml4d69g8cmAkf345Xe5knqGTh8wt2idJjEnjgF8j3WqCdbD1AUkqnovQ5igr36E/j8+B6GyNZtQVEqSyNZT16o973IpkoOs3ZUk5kAi9TlAxHIdLIUDqmnKr29apu/UGTdOGr0zqUbnJyawh+aCUSzLP3D/CKQFtcGNvs+FqUciOlRt1FoU25GuDMEH7ol3ic5+45jOMeJJNPwhOHxynJvAMQCnJAqGYMQefj4o5LnfRBYpS4CumMGhzuBvfHkVnrYj69d+gJ3YEpJ5aKBu9tCAAgyl9g8KzRTfLPCiSqxKfV7uQoNHilluWdHW8TQssHSzi1+K3WVXhRVTTV0NjQoEt9ZkPb7/iOns8IW5SucSJUABDf7U8C3aG+t0zymjMhpkpsnq/JPK2K4pkO8Qa0R6GSO6YJKVT9sKCYTfD3Mrr3FnROaThouPmQmCFfzVXErgdnAaBJUrG7F5vppguDA+obT9GH13zrurn+bEnvZfgi2oIutV/CMHijYS3tTA0OIEdHZRUb1DHU+efX4YuJc4qF2W117ZgUjv9luxAIFcPRXpkDKeUv1gGYAuKIMatkmLJ6END8iakKgb2NpfsNna8a1MSjAe
    azurestorageaccountname: >-
      AgAfpzqFtomji8nwYM6g5mbXXDAA8REQtfJakS059Vy2KkUbZ1okjVQ5mFN61ODTcBknR/dbncVRsl9n/JoEqLfN1wSp58QOBTFLFXiMNeLACEEIYg/Ko6hZVsUB6xs6x0Ma75ngDr+BcAtUCX9g7qqd4Lpw+7lWNdDrO4yT7BLdbV1WvoHA8YQkSyqZ/w9/lugYwc63mmf5PsUz3JVhHMwN+esOvTOcDqxFwpSR2v3z/o7wgmm3CLSg06LGSK5rAppetk/ojfeWZqWk9nA6It/BQ2x1nlku/2wU4HjO7H1+syPsvftElu4Bw4vcX8SFY5+2oGplwekThIkH/V+YQvsq1mI0y45ZOh8QfwfNJoPNjvEFGXpZX8eKriUAeesMC0y7CRMeSBVXdrmQFe9yjViFsh1gX5G5Jl7bFKMhZORZ/DAvVUfXt4zC/V+y3uo6QrFEp8Ywm/uYO5KwhiGU2B/8gYu3oQUuhjl8M+s+y8jkF+WeCTPe0lsxCYlxQ/BB9e1x86j+ulPtUEvlA4Bp/AMlKUomdLDuX8Mddtp2T85QB+3KuTtBQlWLRqjywhEZjKmourH99JOF2Buh9OX/tGg7S5ZfuUdwHqQh5/dX1S2/VFAJFdFOpt0HEzuiuxTw2l1rw5SYqmZuHRrbVIHgTyxRpUcJXQ+dep6MAuklR42sxynraa620atGW1MdHALd6U90DG8H482QS97v9lH3
  template:
    metadata:
      annotations: {}
      name: azure-cdtnadminprod-volume
    type: Opaque
---
apiVersion: v1
kind: ConfigMap
data:
  post-restore.sql: |+
    TRUNCATE TABLE \\"auth\\".\\"users\\" CASCADE;

    --
    -- DISABLE TRIGGERS
    --

    ALTER TABLE auth.users DISABLE TRIGGER USER;

    WITH admin_row AS (
    INSERT INTO auth.users (email, PASSWORD, name, default_role, active)
        VALUES ('codedutravailnumerique@travail.gouv.fr', '$argon2i$v=19$m=4096,t=3,p=1$n9eoWSv+5sCgc7SjB5hLig$iBQ7NzrHHLkJSku/dCetNs+n/JI1CMdkWaoZsUekLU8', 'Administrateur', 'admin', TRUE)
      RETURNING
        id, default_role)
      INSERT INTO auth.user_roles (ROLE, user_id)
      SELECT
        default_role,
        id
      FROM
        admin_row;

    WITH admin_row AS (
    INSERT INTO auth.users (email, PASSWORD, name, default_role, active)
        VALUES ('utilisateur@travail.gouv.fr', '$argon2i$v=19$m=4096,t=3,p=1$PqKPf9cxunVLLtEcINHhWQ$CwHKhk71fc8LGp6BWbcFPzQ2ftOiHa7vUkp1eAqVHSM', 'Utilisateur', 'user', TRUE)
      RETURNING
        id, default_role)
      INSERT INTO auth.user_roles (ROLE, user_id)
      SELECT
        default_role,
        id
      FROM
        admin_row;

    --
    -- create empty audit logs table
    --

    CREATE TABLE IF NOT EXISTS audit.logged_actions (
        event_id bigserial primary key,

        schema_name text not null,
        table_name text not null,
        relid oid not null,

        session_user_name text,
        hasura_user jsonb,

        action_tstamp_tx TIMESTAMP WITH TIME ZONE NOT NULL,
        action_tstamp_stm TIMESTAMP WITH TIME ZONE NOT NULL,
        action_tstamp_clock TIMESTAMP WITH TIME ZONE NOT NULL,
        transaction_id bigint,

        application_name text,
        client_addr inet,
        client_port integer,

        client_query text,
        action TEXT NOT NULL CHECK (action IN ('I','D','U', 'T')),
        row_data jsonb,
        changed_fields jsonb,
        statement_only boolean not null
    );

    --
    -- ENABLE TRIGGERS
    --

    ALTER TABLE auth.users ENABLE TRIGGER USER;

    --
    -- Kill all connections !
    -- Make all connected services restart !
    -- Hasura migration will be re-applyed.
    --

    SELECT pg_terminate_backend(pid)
    FROM pg_stat_activity
    WHERE pid <> pg_backend_pid()
    AND datname = 'autodevops_master';


metadata:
  name: post-restore-script-configmap-master
  namespace: cdtn-admin
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    kapp.k14s.io/update-strategy: skip
  labels:
    component: prod-cdtn-admin
    application: prod-cdtn-admin
    owner: cdtn-admin
    team: cdtn-admin
  name: restore-db-master
  namespace: cdtn-admin
spec:
  backoffLimit: 0
  template:
    metadata:
      annotations:
        kapp.k14s.io/deploy-logs: for-new-or-existing
    spec:
      containers:
        - command:
            - sh
            - '-c'
            - >


              echo \\"starting restore into $PGHOST/$PGDATABASE\\"


              [ ! -z $PGDATABASE ] || (echo \\"No PGDATABASE\\"; exit 1)

              [ ! -z $PGHOST ] || (echo \\"No PGHOST\\"; exit 1)

              [ ! -z $PGUSER ] || (echo \\"No PGUSER\\"; exit 1)

              [ ! -z $PGPASSWORD ] || (echo \\"No PGPASSWORD\\"; exit 1)

              [ ! -z $OWNER ] || (echo \\"No OWNER\\"; exit 1)


              # get latest backup folder

              LATEST=$(ls -1Fr /mnt/data | head -n 1);

              DUMP=\\"/mnt/data/\${LATEST}\${FILE}\\"

              echo \\"Restore \${DUMP} into \${PGDATABASE}\\";


              pg_isready;


              pg_restore   --dbname \${PGDATABASE}   --clean --if-exists  
              --exclude-schema=audit   --no-owner   --role \${OWNER}   --no-acl  
              --verbose   \${DUMP};


              psql -v ON_ERROR_STOP=1 \${PGDATABASE} -c \\"ALTER SCHEMA public
              owner to \${OWNER};\\"


              [ -f \\"/mnt/scripts/post-restore.sql\\" ] && psql -v ON_ERROR_STOP=1
              -a < /mnt/scripts/post-restore.sql
          env:
            - name: PGDATABASE
              value: autodevops_master
            - name: OWNER
              value: user_master
            - name: FILE
              value: hasura_prod_db.psql.gz
          envFrom:
            - secretRef:
                name: azure-pg-admin-user-dev
          image: ghcr.io/socialgouv/docker/azure-db:6.45.0
          imagePullPolicy: IfNotPresent
          name: restore-db
          resources:
            limits:
              cpu: 300m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 64Mi
          volumeMounts:
            - mountPath: /mnt/data
              name: backups
            - mountPath: /mnt/scripts
              name: scripts
      restartPolicy: OnFailure
      volumes:
        - name: backups
          persistentVolumeClaim:
            claimName: cdtn-admin-backup-restore
            readOnly: true
        - configMap:
            name: post-restore-script-configmap-master
          name: scripts
      initContainers:
        - env:
            - name: PGHOST
              value: cdtnadmindevserver.postgres.database.azure.com
            - name: PGDATABASE
              value: autodevops_master
            - name: PGPASSWORD
              value: password_master
            - name: PGUSER
              value: user_master@cdtnadmindevserver.postgres.database.azure.com
            - name: PGSSLMODE
              value: require
          envFrom: []
          image: ghcr.io/socialgouv/docker/wait-for-postgres:6.45.0
          imagePullPolicy: Always
          name: wait-for-postgres
          resources:
            limits:
              cpu: 20m
              memory: 32Mi
            requests:
              cpu: 5m
              memory: 16Mi
  ttlSecondsAfterFinished: 86400
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: cdtn-admin-backup-restore
  annotations:
    app.gitlab.com/app: socialgouv-cdtn-admin
    app.gitlab.com/env: prod
    app.gitlab.com/env.name: prod
  labels:
    application: prod-cdtn-admin
    component: prod-cdtn-admin
    owner: cdtn-admin
    team: cdtn-admin
  namespace: cdtn-admin
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 128Gi
  selector:
    matchLabels:
      usage: prod-cdtn-admin-backup-restore
  storageClassName: ''
---
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    usage: prod-cdtn-admin-backup-restore
    application: prod-cdtn-admin
    component: prod-cdtn-admin
    owner: cdtn-admin
    team: cdtn-admin
  name: prod-cdtn-admin-backup-restore
  annotations:
    app.gitlab.com/app: socialgouv-cdtn-admin
    app.gitlab.com/env: prod
    app.gitlab.com/env.name: prod
  namespace: cdtn-admin
spec:
  accessModes:
    - ReadWriteMany
  azureFile:
    secretName: cdtnadminprodserver-backup-credentials
    secretNamespace: cdtn-admin
    shareName: cdtnadminprodserver-backup-restore
  capacity:
    storage: 128Gi
  persistentVolumeReclaimPolicy: Delete
  storageClassName: ''
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  annotations: {}
  name: cdtnadminprodserver-backup-credentials
  namespace: cdtn-admin
spec:
  encryptedData:
    azurestorageaccountkey: >-
      AgCVj5vWPZOMIT1FZ4hD/KzBIafbvESag4ogSLtdQjCG8ZNBUQPHUe+h2OoNWBjDlNLaRAd9Dsn5lxLmtsi53+1K8pbn97vXCy+izahR8e1boo6DgMsPzKbvqxXaraAR53mZYw0+ywyTyiMG+9uHX2f6iehVfS1FkNA/fLBFp1dF+oTYO5x3oYii2lndLVvG3vhItsIvzbdUcSvQEt0ybjPIqxD3eqvWxVgDkDgt3jbSwtIDhGMSuJDP2KOOKb6kVDX8AqVFtZibDcyuAZ8SUM9AM3YMjjCML4Hi2pQXFV/vnTQDoKa1S+scMZFmExFJ6s6H8U79Ib3gy4w6Nq7JTAIvFFJDlCLy1YK9PYnG36tqpMBbUB+/fPwXsHXA6RBLnjO4BjifqRSAbmed0uy4/QWsemk4eHaKCqRCS4Zw6bzI0GrAV2euvEE/Q/XGffnbmCp4tfZgTi+GWlrCZCdJJCyW259mdjKPJutdIj9w/TwAXLZ0cs1fxA87Q7lio1WPYSYfVW96RYtTugjaDfDjxNnpKjYnkKXkymbYVvYY6Vc/Eplink+WD3NTV4xILy/OQrDp67v42vHHDY7mzL5paNzw5o7dHNoYUjxj7Yz+6xGTHNedkwWfBEjkbH+UW5VZ7j0+UAQpLDh+BvpsuHF1MnHRRki8ePcKe31AddJcNjRF8rHpmmdaxq1nw0nxTZgMgx6D2skG0Nx4Dh13ZcPoBcLyTKk/ZCiOZTImcHQkqAKfW1xSud7PCx0tXXh66myhAeWhr6ptRGJJKFXI9mVaHKKOeQH9bcJNuOCWuh2nUPkZOIL3F8kXhaCK
    azurestorageaccountname: >-
      AgBmOUme/CM1ORvvlOTvQgYoV/Dz/NmFrB4/+7Mt6sLCbJ+RPWDlNlC7LPNPp/hZ7p9QghPTfNxYIHpTIfsaPIsl90csdGvxemOM5OGfbO7HXhRHcWBNLrfptpLR9k9UVLfdqEogcNd7hZy8I5BvCoPOw92U7hPkSSxT4nGm8pmAeSykk3E9uPfW5gur6UbiTFw12NRZKc3cDhdpE3Jk+nrXvbrISyK/Ss4AY+KA3ROI+lKxXEONPdUAurmct2O2fPxYoxbbKShHZKkaB5upaDs9Cn2ikDwhck3aeh6YxyiRpXVaAOVNE0Sq+mqVmWtPVya3mVh3FAa6Tk9YISn6G9oRoFP2Q8hzOTqJFLopmpFlSRxpQkW5shXQ+kU27uYKnFaZVjRkTncICV1PFHSmOZs5pkZJFjFn97DHDRJLQ0lhOn9NcE5FTCR45pFonYp7v2jg2icWxaCYgCZPre6t37z1FnBDGTptPn5ZtJIWvzw1OO8koiKgZ5cMuw3Yh3jDUmj8C4yxrY4mhWFSH9vOfHOWkyhAQpxKh8Dcp+yvIEFjl4X0BVu9aHQqROWdy+3uult1TjTYWdLx1ZOlzuT8sO6DdNSc4g0dI+0NvUEd3m6ZFnmCFiVUpYiP5+gljg/e7ha3XJs93n3pg3ip6ucaqFfQfWmHYzDYjT64UkperyS50u4c4145wRI+N89tT4umCXpUKLJg2ETQnsQUmes3a+oTrAzX6A==
  template:
    metadata:
      annotations: {}
      name: cdtnadminprodserver-backup-credentials
    type: Opaque
"
`;

exports[`should generate preprod restore for prod cluster 1`] = `
"---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    kapp.k14s.io/update-strategy: skip
  labels:
    component: v1-2-3-cdtn-admin
    application: v1-2-3-cdtn-admin
    owner: cdtn-admin
    team: cdtn-admin
  name: restore-container-v1-2-3-x39y81
  namespace: cdtn-admin
spec:
  backoffLimit: 0
  template:
    metadata:
      annotations:
        kapp.k14s.io/deploy-logs: for-new-or-existing
    spec:
      containers:
        - command:
            - sh
            - '-c'
            - >+


              [ ! -z $SOURCE_CONTAINER ] || (echo \\"No SOURCE_CONTAINER\\"; exit 1)

              [ ! -z $SOURCE_ACCOUNT_NAME ] || (echo \\"No SOURCE_ACCOUNT_NAME\\";
              exit 1)

              [ ! -z $SOURCE_ACCOUNT_KEY ] || (echo \\"No SOURCE_ACCOUNT_KEY\\";
              exit 1)

              [ ! -z $DESTINATION_CONTAINER ] || (echo \\"No
              DESTINATION_CONTAINER\\"; exit 1)

              [ ! -z $DESTINATION_ACCOUNT_NAME ] || (echo \\"No
              DESTINATION_ACCOUNT_NAME\\"; exit 1)

              [ ! -z $DESTINATION_ACCOUNT_KEY ] || (echo \\"No
              DESTINATION_ACCOUNT_KEY\\"; exit 1)



              echo \\"starting restore container $SOURCE_CONTAINER into
              $DESTINATION_CONTAINER\\"


              # copy container

              az storage copy -r   --source-account-name
              \\"$SOURCE_ACCOUNT_NAME\\"   --source-account-key
              \\"$SOURCE_ACCOUNT_KEY\\"   --source-container \\"$SOURCE_CONTAINER\\"  
              --account-name \\"$DESTINATION_ACCOUNT_NAME\\"   --account-key
              \\"$DESTINATION_ACCOUNT_KEY\\"   --destination-container
              \\"$DESTINATION_CONTAINER\\"


              # get original permission

              PUBLIC_ACCESS=\`az storage container show-permission  
              --account-name \\"$SOURCE_ACCOUNT_NAME\\"   --account-key
              \\"$SOURCE_ACCOUNT_KEY\\"   --name $SOURCE_CONTAINER | jq -r
              \\".publicAccess\\"\`


              # set original permission

              az storage container set-permission   --name
              $DESTINATION_CONTAINER   --account-name
              \\"$DESTINATION_ACCOUNT_NAME\\"   --account-key
              \\"$DESTINATION_ACCOUNT_KEY\\"   --public-access $PUBLIC_ACCESS

          env:
            - name: SOURCE_ACCOUNT_NAME
              valueFrom:
                secretKeyRef:
                  key: azurestorageaccountname
                  name: azure-cdtnadmindev-volume
            - name: SOURCE_ACCOUNT_KEY
              valueFrom:
                secretKeyRef:
                  key: azurestorageaccountkey
                  name: azure-cdtnadmindev-volume
            - name: DESTINATION_ACCOUNT_NAME
              valueFrom:
                secretKeyRef:
                  key: azurestorageaccountname
                  name: azure-cdtnadmindev-volume
            - name: DESTINATION_ACCOUNT_KEY
              valueFrom:
                secretKeyRef:
                  key: azurestorageaccountkey
                  name: azure-cdtnadmindev-volume
            - name: SOURCE_CONTAINER
              value: cdtn
            - name: DESTINATION_CONTAINER
              value: cdtn-preprod
          envFrom: []
          image: mcr.microsoft.com/azure-cli:2.15.1
          imagePullPolicy: IfNotPresent
          name: restore-db
          resources:
            limits:
              cpu: 300m
              memory: 512Mi
            requests:
              cpu: 50m
              memory: 64Mi
      restartPolicy: Never
  ttlSecondsAfterFinished: 86400
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  annotations: {}
  name: azure-cdtnadmindev-volume
  namespace: cdtn-admin
spec:
  encryptedData:
    azurestorageaccountkey: >-
      AgAFpMndUw7Mo4QLdKCaW+mOLMauIXGu+cHv9F4sEbsVBnGy/oXmuBVU6hNiXJ/58JHSXSVsnpp8qYu9GhAHdQmN5crWmWDqfqgXd/03iH80QFyR+0PMMQZwsAqsnbzoox8SlghhwiwazdCB2y0C0VsxCd7sSC1uD+t9BUlIX1vRRTosUrZwD3SfKQI3otEXze+/fyo6pEnxMfvTs/fPZtIn4ixt8JL3hrLEDpavjLScIf1VgPlxG7+LC2CYcAeQ+k5hmtlLIFrjYRwlOEhrRNDCbgjEtOzVPuT3cCYAfuC8rFa4QW0kSRH8SRd4azQfNKfZNsUH8/bCq91h2zDRNpVSCm/ZWSQZYFPhmgRMlvqUNEqBAURQUUE1FwkNohr02jBeISrm4PW/7cSdoIhJ5Q7kXle2PzmC+Cv1n9y67OlCtxHSqOik+rCH2ryqoY+sKgoAISVvVWyhAf5/1VWqKudQDkJpbAyV7zh9orRbgKohtjAxFRdWK/+YplEDC/xWI8FnZd26PS5Cs/hRByDf5EVmDFNir64lPJ5kHYyLnFxF50RD9UQRPJ6qGRLO3gEYKRfle6Vox00lZ9y/ck2MAJo6/ZChksclBQYMC++Ky69zlQhQu1WzQGxV5iQRTDwQSHdzcHvEF7HEM390Fq6bglib00VOVx7wYFS4TgcrEgwKYIt1bkvtea204W8/6yn5WYZN8OiLElDmVy+0xcHVUwokdPlGEkR6YepI2dircEj89WzFELN7M2J4wbaEqkVODnEe8itGl+yhXiYDpsPzVnGulRwdNhIfWbf8Hq9ILY8GbXO6LdG4dJhL
    azurestorageaccountname: >-
      AgBm39+zb0dIlbRiM17Cg++XLr04EzShAbwHORvltWJE1HWGvCEMIFuEFjD2NOCuScOGK6b2abqLOadoDnENC+3HKwjwNQKRADL/TCX0bW4DMCJJ4RabMXalaaq19BSa1lN2yMgW1TO+lwVibiIxIpEbbYGpbL+U07Qraf5cNi9O+2Pc6hXmVWDoTi2Op9pEa0aYhKq1wIxB4B4kowH5RjsskdlXy2Gf2pf5QL4EFVBae8MMwH2INsJc/R90tuIGSwgr+FQ13iD1E3sEGi1VBqAcIRwA99UVUbsDVQc6Li/ENbJuS5JR9wPRqfvr+D5O5n+iRcYbDabo7R+bLIm0IdgAmIvREGmAHmq81Z6txWiJeUIsRZ3BldN9JGnU1fUpmA78TVhfpq42zy6q2EDvjIc91CL0jIJNI2mGljha2T1/gy2vqnIbTDj0zHBVajPEO+26vlUSd9zmDETf4Km3V2tYblUIiDuZwqH2hiiQz4lf1UYqF2sS5XlxcXBBP98YaLHNt0S5N/k1avH/XuaJbPyMyU9ZKE1IXWYTLnoMVnPM+/lD0J9xfeZJ3gLeLtjilARlk6FdzDx5W7IH4u9sdFEktnKq8NXRhkeYXb3CHtSjxYy1PfF6tSOCP9DIaZMcK2Z9Vqivis3+ZbFqxe9vWU92xzRg5ZsPr+AkXHnPOLKvt/SCnjRLT5taJVCBfvOSEXkg3tDKk2DWFczzpHA=
  template:
    metadata:
      annotations: {}
      name: azure-cdtnadmindev-volume
    type: Opaque
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  annotations: {}
  name: azure-cdtnadminprod-volume
  namespace: cdtn-admin
spec:
  encryptedData:
    azurestorageaccountkey: >-
      AgArMu861qm2F7g/QpkOUqz4BAM+AIwuAXsE2PpJMNKKmZz/Pbyg3oIMfdcqg8e3rss7PpddLbZv+TYFCC8HuVIrQ9u5gA1t2HN0qjDGBsDyWr7cF2I+eB71JN287MoOeG90hF+TfkHh3bONZTDEwOT+sYs6XSDm4EsXEE7kkUk0yJjUA0s5uXZYI33dteRWPYMp7KaG73RWl6CW0/woKwnX5ml4d69g8cmAkf345Xe5knqGTh8wt2idJjEnjgF8j3WqCdbD1AUkqnovQ5igr36E/j8+B6GyNZtQVEqSyNZT16o973IpkoOs3ZUk5kAi9TlAxHIdLIUDqmnKr29apu/UGTdOGr0zqUbnJyawh+aCUSzLP3D/CKQFtcGNvs+FqUciOlRt1FoU25GuDMEH7ol3ic5+45jOMeJJNPwhOHxynJvAMQCnJAqGYMQefj4o5LnfRBYpS4CumMGhzuBvfHkVnrYj69d+gJ3YEpJ5aKBu9tCAAgyl9g8KzRTfLPCiSqxKfV7uQoNHilluWdHW8TQssHSzi1+K3WVXhRVTTV0NjQoEt9ZkPb7/iOns8IW5SucSJUABDf7U8C3aG+t0zymjMhpkpsnq/JPK2K4pkO8Qa0R6GSO6YJKVT9sKCYTfD3Mrr3FnROaThouPmQmCFfzVXErgdnAaBJUrG7F5vppguDA+obT9GH13zrurn+bEnvZfgi2oIutV/CMHijYS3tTA0OIEdHZRUb1DHU+efX4YuJc4qF2W117ZgUjv9luxAIFcPRXpkDKeUv1gGYAuKIMatkmLJ6END8iakKgb2NpfsNna8a1MSjAe
    azurestorageaccountname: >-
      AgAfpzqFtomji8nwYM6g5mbXXDAA8REQtfJakS059Vy2KkUbZ1okjVQ5mFN61ODTcBknR/dbncVRsl9n/JoEqLfN1wSp58QOBTFLFXiMNeLACEEIYg/Ko6hZVsUB6xs6x0Ma75ngDr+BcAtUCX9g7qqd4Lpw+7lWNdDrO4yT7BLdbV1WvoHA8YQkSyqZ/w9/lugYwc63mmf5PsUz3JVhHMwN+esOvTOcDqxFwpSR2v3z/o7wgmm3CLSg06LGSK5rAppetk/ojfeWZqWk9nA6It/BQ2x1nlku/2wU4HjO7H1+syPsvftElu4Bw4vcX8SFY5+2oGplwekThIkH/V+YQvsq1mI0y45ZOh8QfwfNJoPNjvEFGXpZX8eKriUAeesMC0y7CRMeSBVXdrmQFe9yjViFsh1gX5G5Jl7bFKMhZORZ/DAvVUfXt4zC/V+y3uo6QrFEp8Ywm/uYO5KwhiGU2B/8gYu3oQUuhjl8M+s+y8jkF+WeCTPe0lsxCYlxQ/BB9e1x86j+ulPtUEvlA4Bp/AMlKUomdLDuX8Mddtp2T85QB+3KuTtBQlWLRqjywhEZjKmourH99JOF2Buh9OX/tGg7S5ZfuUdwHqQh5/dX1S2/VFAJFdFOpt0HEzuiuxTw2l1rw5SYqmZuHRrbVIHgTyxRpUcJXQ+dep6MAuklR42sxynraa620atGW1MdHALd6U90DG8H482QS97v9lH3
  template:
    metadata:
      annotations: {}
      name: azure-cdtnadminprod-volume
    type: Opaque
---
apiVersion: v1
kind: ConfigMap
data:
  post-restore.sql: |+
    TRUNCATE TABLE \\"auth\\".\\"users\\" CASCADE;

    --
    -- DISABLE TRIGGERS
    --

    ALTER TABLE auth.users DISABLE TRIGGER USER;

    WITH admin_row AS (
    INSERT INTO auth.users (email, PASSWORD, name, default_role, active)
        VALUES ('codedutravailnumerique@travail.gouv.fr', '$argon2i$v=19$m=4096,t=3,p=1$n9eoWSv+5sCgc7SjB5hLig$iBQ7NzrHHLkJSku/dCetNs+n/JI1CMdkWaoZsUekLU8', 'Administrateur', 'admin', TRUE)
      RETURNING
        id, default_role)
      INSERT INTO auth.user_roles (ROLE, user_id)
      SELECT
        default_role,
        id
      FROM
        admin_row;

    WITH admin_row AS (
    INSERT INTO auth.users (email, PASSWORD, name, default_role, active)
        VALUES ('utilisateur@travail.gouv.fr', '$argon2i$v=19$m=4096,t=3,p=1$PqKPf9cxunVLLtEcINHhWQ$CwHKhk71fc8LGp6BWbcFPzQ2ftOiHa7vUkp1eAqVHSM', 'Utilisateur', 'user', TRUE)
      RETURNING
        id, default_role)
      INSERT INTO auth.user_roles (ROLE, user_id)
      SELECT
        default_role,
        id
      FROM
        admin_row;

    --
    -- create empty audit logs table
    --

    CREATE TABLE IF NOT EXISTS audit.logged_actions (
        event_id bigserial primary key,

        schema_name text not null,
        table_name text not null,
        relid oid not null,

        session_user_name text,
        hasura_user jsonb,

        action_tstamp_tx TIMESTAMP WITH TIME ZONE NOT NULL,
        action_tstamp_stm TIMESTAMP WITH TIME ZONE NOT NULL,
        action_tstamp_clock TIMESTAMP WITH TIME ZONE NOT NULL,
        transaction_id bigint,

        application_name text,
        client_addr inet,
        client_port integer,

        client_query text,
        action TEXT NOT NULL CHECK (action IN ('I','D','U', 'T')),
        row_data jsonb,
        changed_fields jsonb,
        statement_only boolean not null
    );

    --
    -- ENABLE TRIGGERS
    --

    ALTER TABLE auth.users ENABLE TRIGGER USER;

    --
    -- Kill all connections !
    -- Make all connected services restart !
    -- Hasura migration will be re-applyed.
    --

    SELECT pg_terminate_backend(pid)
    FROM pg_stat_activity
    WHERE pid <> pg_backend_pid()
    AND datname = 'autodevops_v1-2-3-5oe0cj';


metadata:
  name: post-restore-script-configmap-v1-2-3-tpilfp
  namespace: cdtn-admin
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    kapp.k14s.io/update-strategy: skip
  labels:
    component: v1-2-3-cdtn-admin
    application: v1-2-3-cdtn-admin
    owner: cdtn-admin
    team: cdtn-admin
  name: restore-db-v1-2-3-59gm0p
  namespace: cdtn-admin
spec:
  backoffLimit: 0
  template:
    metadata:
      annotations:
        kapp.k14s.io/deploy-logs: for-new-or-existing
    spec:
      containers:
        - command:
            - sh
            - '-c'
            - >


              echo \\"starting restore into $PGHOST/$PGDATABASE\\"


              [ ! -z $PGDATABASE ] || (echo \\"No PGDATABASE\\"; exit 1)

              [ ! -z $PGHOST ] || (echo \\"No PGHOST\\"; exit 1)

              [ ! -z $PGUSER ] || (echo \\"No PGUSER\\"; exit 1)

              [ ! -z $PGPASSWORD ] || (echo \\"No PGPASSWORD\\"; exit 1)

              [ ! -z $OWNER ] || (echo \\"No OWNER\\"; exit 1)


              # get latest backup folder

              LATEST=$(ls -1Fr /mnt/data | head -n 1);

              DUMP=\\"/mnt/data/\${LATEST}\${FILE}\\"

              echo \\"Restore \${DUMP} into \${PGDATABASE}\\";


              pg_isready;


              pg_restore   --dbname \${PGDATABASE}   --clean --if-exists  
              --exclude-schema=audit   --no-owner   --role \${OWNER}   --no-acl  
              --verbose   \${DUMP};


              psql -v ON_ERROR_STOP=1 \${PGDATABASE} -c \\"ALTER SCHEMA public
              owner to \${OWNER};\\"


              [ -f \\"/mnt/scripts/post-restore.sql\\" ] && psql -v ON_ERROR_STOP=1
              -a < /mnt/scripts/post-restore.sql
          env:
            - name: PGDATABASE
              value: autodevops_v1-2-3-5oe0cj
            - name: OWNER
              value: user_v1-2-3-5oe0cj
            - name: FILE
              value: hasura_prod_db.psql.gz
          envFrom:
            - secretRef:
                name: azure-pg-admin-user-dev
          image: ghcr.io/socialgouv/docker/azure-db:6.45.0
          imagePullPolicy: IfNotPresent
          name: restore-db
          resources:
            limits:
              cpu: 300m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 64Mi
          volumeMounts:
            - mountPath: /mnt/data
              name: backups
            - mountPath: /mnt/scripts
              name: scripts
      restartPolicy: OnFailure
      volumes:
        - name: backups
          persistentVolumeClaim:
            claimName: cdtn-admin-backup-restore
            readOnly: true
        - configMap:
            name: post-restore-script-configmap-v1-2-3-tpilfp
          name: scripts
      initContainers:
        - env:
            - name: PGHOST
              value: cdtnadmindevserver.postgres.database.azure.com
            - name: PGDATABASE
              value: autodevops_v1-2-3-5oe0cj
            - name: PGPASSWORD
              value: password_v1-2-3-5oe0cj
            - name: PGUSER
              value: >-
                user_v1-2-3-5oe0cj@cdtnadmindevserver.postgres.database.azure.com
            - name: PGSSLMODE
              value: require
          envFrom: []
          image: ghcr.io/socialgouv/docker/wait-for-postgres:6.45.0
          imagePullPolicy: Always
          name: wait-for-postgres
          resources:
            limits:
              cpu: 20m
              memory: 32Mi
            requests:
              cpu: 5m
              memory: 16Mi
  ttlSecondsAfterFinished: 86400
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: cdtn-admin-backup-restore
  annotations:
    app.gitlab.com/app: socialgouv-cdtn-admin
    app.gitlab.com/env: prod
    app.gitlab.com/env.name: prod
  labels:
    application: v1-2-3-cdtn-admin
    component: v1-2-3-cdtn-admin
    owner: cdtn-admin
    team: cdtn-admin
  namespace: cdtn-admin
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 128Gi
  selector:
    matchLabels:
      usage: prod-cdtn-admin-backup-restore
  storageClassName: ''
---
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    usage: prod-cdtn-admin-backup-restore
    application: v1-2-3-cdtn-admin
    component: v1-2-3-cdtn-admin
    owner: cdtn-admin
    team: cdtn-admin
  name: prod-cdtn-admin-backup-restore
  annotations:
    app.gitlab.com/app: socialgouv-cdtn-admin
    app.gitlab.com/env: prod
    app.gitlab.com/env.name: prod
  namespace: cdtn-admin
spec:
  accessModes:
    - ReadWriteMany
  azureFile:
    secretName: cdtnadminprodserver-backup-credentials
    secretNamespace: cdtn-admin
    shareName: cdtnadminprodserver-backup-restore
  capacity:
    storage: 128Gi
  persistentVolumeReclaimPolicy: Delete
  storageClassName: ''
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  annotations: {}
  name: cdtnadminprodserver-backup-credentials
  namespace: cdtn-admin
spec:
  encryptedData:
    azurestorageaccountkey: >-
      AgCVj5vWPZOMIT1FZ4hD/KzBIafbvESag4ogSLtdQjCG8ZNBUQPHUe+h2OoNWBjDlNLaRAd9Dsn5lxLmtsi53+1K8pbn97vXCy+izahR8e1boo6DgMsPzKbvqxXaraAR53mZYw0+ywyTyiMG+9uHX2f6iehVfS1FkNA/fLBFp1dF+oTYO5x3oYii2lndLVvG3vhItsIvzbdUcSvQEt0ybjPIqxD3eqvWxVgDkDgt3jbSwtIDhGMSuJDP2KOOKb6kVDX8AqVFtZibDcyuAZ8SUM9AM3YMjjCML4Hi2pQXFV/vnTQDoKa1S+scMZFmExFJ6s6H8U79Ib3gy4w6Nq7JTAIvFFJDlCLy1YK9PYnG36tqpMBbUB+/fPwXsHXA6RBLnjO4BjifqRSAbmed0uy4/QWsemk4eHaKCqRCS4Zw6bzI0GrAV2euvEE/Q/XGffnbmCp4tfZgTi+GWlrCZCdJJCyW259mdjKPJutdIj9w/TwAXLZ0cs1fxA87Q7lio1WPYSYfVW96RYtTugjaDfDjxNnpKjYnkKXkymbYVvYY6Vc/Eplink+WD3NTV4xILy/OQrDp67v42vHHDY7mzL5paNzw5o7dHNoYUjxj7Yz+6xGTHNedkwWfBEjkbH+UW5VZ7j0+UAQpLDh+BvpsuHF1MnHRRki8ePcKe31AddJcNjRF8rHpmmdaxq1nw0nxTZgMgx6D2skG0Nx4Dh13ZcPoBcLyTKk/ZCiOZTImcHQkqAKfW1xSud7PCx0tXXh66myhAeWhr6ptRGJJKFXI9mVaHKKOeQH9bcJNuOCWuh2nUPkZOIL3F8kXhaCK
    azurestorageaccountname: >-
      AgBmOUme/CM1ORvvlOTvQgYoV/Dz/NmFrB4/+7Mt6sLCbJ+RPWDlNlC7LPNPp/hZ7p9QghPTfNxYIHpTIfsaPIsl90csdGvxemOM5OGfbO7HXhRHcWBNLrfptpLR9k9UVLfdqEogcNd7hZy8I5BvCoPOw92U7hPkSSxT4nGm8pmAeSykk3E9uPfW5gur6UbiTFw12NRZKc3cDhdpE3Jk+nrXvbrISyK/Ss4AY+KA3ROI+lKxXEONPdUAurmct2O2fPxYoxbbKShHZKkaB5upaDs9Cn2ikDwhck3aeh6YxyiRpXVaAOVNE0Sq+mqVmWtPVya3mVh3FAa6Tk9YISn6G9oRoFP2Q8hzOTqJFLopmpFlSRxpQkW5shXQ+kU27uYKnFaZVjRkTncICV1PFHSmOZs5pkZJFjFn97DHDRJLQ0lhOn9NcE5FTCR45pFonYp7v2jg2icWxaCYgCZPre6t37z1FnBDGTptPn5ZtJIWvzw1OO8koiKgZ5cMuw3Yh3jDUmj8C4yxrY4mhWFSH9vOfHOWkyhAQpxKh8Dcp+yvIEFjl4X0BVu9aHQqROWdy+3uult1TjTYWdLx1ZOlzuT8sO6DdNSc4g0dI+0NvUEd3m6ZFnmCFiVUpYiP5+gljg/e7ha3XJs93n3pg3ip6ucaqFfQfWmHYzDYjT64UkperyS50u4c4145wRI+N89tT4umCXpUKLJg2ETQnsQUmes3a+oTrAzX6A==
  template:
    metadata:
      annotations: {}
      name: cdtnadminprodserver-backup-credentials
    type: Opaque
"
`;
