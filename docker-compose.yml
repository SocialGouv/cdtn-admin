version: "3.8"
services:
  postgres:
    image: postgres:14
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: postgrespassword

  hasura:
    build:
      context: targets/hasura
    extra_hosts:
      host.docker.internal: host-gateway
    volumes:
      - ./targets/hasura/migrations:/hasura-migrations
      - ./targets/hasura/metadata:/hasura-metadata
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    env_file:
      - .env
    environment:
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_MIGRATIONS_DIR: /hasura-migrations
      HASURA_GRAPHQL_METADATA_DIR: /hasura-metadata

  www:
    build:
      context: .
      dockerfile: targets/frontend/Dockerfile
      shm_size: 512m
      secrets:
        - npmTiptapToken
    depends_on:
      - hasura
    ports:
      - "3000:3000"
    env_file:
      - .env
    environment:
      HASURA_GRAPHQL_ENDPOINT: "http://hasura:8080/v1/graphql"

  contributions:
    build:
      context: .
      dockerfile: targets/contributions/Dockerfile
      shm_size: 512m
    depends_on:
      - hasura
      - www
    ports:
      - "3200:3200"
    environment:
      API_URI: http://www
    env_file:
      - .env

  ingester:
    build:
      context: .
      dockerfile: targets/ingester/Dockerfile
      shm_size: 512m
    depends_on:
      - hasura
    env_file:
      - .env
    environment:
      HASURA_GRAPHQL_ENDPOINT: "http://hasura:8080/v1/graphql"

  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    ports:
      - "10000:10000"
      - "10001:10001"
    volumes:
      - azurite_data:/data

  elasticsearch:
    build:
      context: ./docker/elasticsearch
    ports:
      - 9200:9200
    volumes:
      - elastic_data:/usr/share/elasticsearch/data
    environment:
      - ES_JAVA_OPTS=-Xmx4g

  kibana:
    image: docker.elastic.co/kibana/kibana:8.4.2
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch

  export:
    platform: linux/amd64
    build:
      context: .
      dockerfile: targets/export-elasticsearch/Dockerfile
      shm_size: 512m
    ports:
      - 8787:8787
    environment:
      HASURA_GRAPHQL_ENDPOINT: "http://hasura:8080/v1/graphql"
      DISABLE_COPY: "true"
      DISABLE_SITEMAP: "true"
      NLP_URL: "https://serving-ml-preprod.dev.fabrique.social.gouv.fr"
      ELASTICSEARCH_INDEX_PREPROD: "cdtn-preprod-v1"
      ELASTICSEARCH_INDEX_PROD: "cdtn-v1"
      ELASTICSEARCH_URL_PREPROD: "http://elasticsearch:9200"
      ELASTICSEARCH_URL_PROD: "http://elasticsearch:9200"

  alert-cli:
    build:
      context: .
      dockerfile: targets/alert-cli/Dockerfile

volumes:
  db_data:
  azurite_data:
  elastic_data:

secrets:
  npmTiptapToken:
    file: .npmTiptapToken.secret
