Install alert:
  extends: .autodevops_install
  interruptible: true
  image: node:14.16.0-alpine3.11
  needs: []
  cache:
    key:
      files:
        - yarn.lock
      prefix: ${CI_JOB_NAME}
    paths:
      - .cache
  script:
    - yarn config set cache-folder $CI_PROJECT_DIR/yarn
    - npx @socialgouv/yarn-workspace-focus-install --cwd targets/alert-cli
  artifacts:
    expire_in: 1 week
    paths:
      - targets/alert-cli/node_modules
      - node_modules

#
#
#

Test alert:
  extends: .autodevops_test
  interruptible: true
  dependencies: null
  needs:
    - job: Install alert
      artifacts: true
  before_script:
    - cd targets/alert-cli

Lint www:
  extends: .autodevops_lint
  interruptible: true
  dependencies: null
  needs:
    - job: Install alert
      artifacts: true
  before_script:
    - cd targets/alert-cli

#
#
#

Build alert:
  extends: .base_yarn_script
  interruptible: true
  image: node:14.16.0-alpine3.11
  needs:
    - job: Install alert
      artifacts: true
  before_script:
    - cd targets/alert-cli
  script:
    - yarn build
  artifacts:
    expire_in: 1 week
    paths:
      - targets/alert-cli/dist

#
#
#

Register alert:
  extends: .autodevops_register_image
  interruptible: true
  dependencies: null
  needs:
    - job: Build alert
      artifacts: true
  variables:
    CONTEXT: .
    DOCKER_BUILD_ARGS: >-
      --shm-size 512M
      -f ./targets/alert-cli/Dockerfile
    IMAGE_NAME: $CI_REGISTRY_IMAGE/alert
#
#
#

# .deploy_alert_stage:
#   script:
#     - echo "kubectl config set-context --current --namespace=${K8S_NAMESPACE}"
#     - kubectl config set-context --current --namespace=${K8S_NAMESPACE}
#     - envsubst < targets/alert-cli/.k8s/alert.cronjob.yaml | kubectl apply -f -

# Deploy alert (dev):
#   extends:
#     - .autodevops_deploy_app_dev
#     - .deploy_alert_stage
#   environment:
#     name: ${CI_COMMIT_REF_SLUG}-dev2

# Deploy alert (prod):
#   extends:
#     - .autodevops_deploy_app_prod
#     - .deploy_alert_stage
#   environment:
#     name: prod2
#   variables:
#     PRODUCTION: "true"
#
#
#

# .trigger_alert_cron:
#   when: manual
#   script:
#     - echo "kubectl config set-context --current --namespace=${K8S_NAMESPACE}"
#     - kubectl config set-context --current --namespace=${K8S_NAMESPACE}
#     - JOB_NAME="triggered-from-job-${CI_JOB_ID}-${RANDOM}"
#     - kubectl create job --from=cronjob/alert "${JOB_NAME}"

#     - timeout 15m
#       bash -c "
#       until
#       kubectl get pod -l job-name=${JOB_NAME}
#       -o jsonpath='{.items[0].status.conditions[?(@.type==\"ContainersReady\")].status}' |
#       grep True
#       ; do sleep 1; done"

#     - kubectl logs -f job/${JOB_NAME}

#     - kubectl get jobs ${JOB_NAME} -o jsonpath='{.status.conditions}'
#     - kubectl get jobs ${JOB_NAME} -o jsonpath='{.status.conditions[?(@.type=="Complete")].status}'

# Trigger alert (dev):
#   extends:
#     - .autodevops_deploy_app_dev
#     - .trigger_alert_cron
#   environment:
#     name: ${CI_COMMIT_REF_SLUG}-dev2

# Trigger alert (prod):
#   extends:
#     - .autodevops_deploy_app_prod
#     - .trigger_alert_cron
#   environment:
#     name: prod2
