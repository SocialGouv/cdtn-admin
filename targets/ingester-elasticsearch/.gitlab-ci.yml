#
#
#

üß∂ install ingester-elasticsearch:
  extends:
    - .autodevops_install
    - .cdtn_base_rules
  image: node:14.16.0-alpine3.11
  cache:
    key:
      files:
        - yarn.lock
      prefix: ${CI_JOB_NAME}
    paths:
      - .cache
  script:
    - yarn global add @socialgouv/yarn-workspace-focus-install
    - yarn exec yarn-workspace-focus-install
      --
      --cwd targets/ingester-elasticsearch
      --
      --frozen-lockfile --prefer-offline
  artifacts:
    expire_in: 1 week
    paths:
      - targets/ingester-elasticsearch/node_modules
      - node_modules

#
#
#

üÉè test ingester-elasticsearch:
  extends:
    - .autodevops_test
    - .cdtn_base_rules
  needs:
    - job: üß∂ install ingester-elasticsearch
      artifacts: true
  before_script:
    - cd targets/ingester-elasticsearch

üî¨ lint ingester-elasticsearch:
  extends:
    - .autodevops_lint
    - .cdtn_base_rules
  needs:
    - job: üß∂ install ingester-elasticsearch
      artifacts: true
  before_script:
    - cd targets/ingester-elasticsearch
  script:
    - yarn types
    - yarn lint

#
#
#

üì¶ build ingester-elasticsearch:
  extends:
    - .base_yarn_script
    - .cdtn_base_rules
  image: node:14.16.0-alpine3.11
  needs:
    - job: üß∂ install ingester-elasticsearch
      artifacts: true
    - job: üß∂ install elasticsearch-document-adapter
      artifacts: true
    - job: üì¶ logger
      artifacts: true
  before_script:
    - cd targets/ingester-elasticsearch
  script:
    - yarn build
  artifacts:
    expire_in: 1 week
    paths:
      - targets/ingester-elasticsearch/bin

#
#
#

üê≥ register ingester-elasticsearch:
  extends:
    - .autodevops_register_image
    - .cdtn_base_rules
  needs:
    - job: üì¶ build ingester-elasticsearch
      artifacts: true
  variables:
    CONTEXT: targets/ingester-elasticsearch
    IMAGE_NAME: $CI_REGISTRY_IMAGE/ingester-elasticsearch

#
#
#

.trigger_ingester_elasticsearch_job:
  extends:
    - .base_deploy_kosko_stage
  stage: Deploy
  cache:
    key:
      files:
        - .k8s/yarn.lock
      prefix: k8s
    paths:
      - .cache
      - .k8s/node_modules
  script:
    - kubectl config set-context --current --namespace=${KUBE_NAMESPACE}
    - kubectl delete job ingester-elasticsearch || true
    - yarn --cwd .k8s --production --frozen-lockfile --prefer-offline --link-duplicates
    - echo "kosko generate ${KOSKO_GENERATE_ARGS} > ${CI_PROJECT_DIR}/manifest.yaml"
    - yarn --silent --cwd .k8s kosko generate ${KOSKO_GENERATE_ARGS} > ${CI_PROJECT_DIR}/manifest.yaml
    - kubectl apply -f ${CI_PROJECT_DIR}/manifest.yaml
    #
    - timeout 15m
      bash -c "
      until
      kubectl get pod -l job-name=ingester-elasticsearch
      -o jsonpath='{.items[0].status.conditions[?(@.type==\"ContainersReady\")].status}' |
      grep True
      ; do sleep 1; done"
    #
    - kubectl logs -f job/ingester-elasticsearch
    #
    - kubectl get jobs ingester-elasticsearch -o jsonpath='{.status.conditions}'
    - kubectl get jobs ingester-elasticsearch -o jsonpath='{.status.conditions[?(@.type=="Complete")].status}'

üõéÔ∏è ingester-elasticsearch (review):
  extends:
    - .autodevops_review
    - .trigger_ingester_elasticsearch_job
  needs:
    - job: üõÇ k8s test
    - job: üê≥ register ingester-elasticsearch
  rules:
    - if: "$PRODUCTION || $RELEASE || $CI_COMMIT_TAG"
      when: never
    - when: manual
      allow_failure: true
  environment:
    name: ${CI_COMMIT_REF_NAME}${AUTO_DEVOPS_DEV_ENVIRONMENT_NAME}
  variables:
    # kosko options
    KOSKO_GENERATE_ARGS: --env dev jobs/ingester-elasticsearch

üõéÔ∏è ingester-elasticsearch (preprod):
  extends:
    - .autodevops_preprod
    - .trigger_ingester_elasticsearch_job
  needs:
    - job: üõÇ k8s test
    - job: üê≥ register ingester-elasticsearch
  rules:
    - if: "$PRODUCTION || $RELEASE"
      when: never
    - if: "$CI_COMMIT_TAG"
      when: manual
      allow_failure: true
  environment:
    name: preprod${AUTO_DEVOPS_PREPROD_ENVIRONMENT_NAME}
  variables:
    # kosko options
    KOSKO_GENERATE_ARGS: --env preprod jobs/ingester-elasticsearch

üéâ ingester-elasticsearch (prod):
  extends:
    - .autodevops_production
    - .trigger_ingester_elasticsearch_job
  needs: []
  rules:
    - if: "$PRODUCTION && $CI_COMMIT_TAG"
      when: manual
      allow_failure: true
  environment:
    name: ${AUTO_DEVOPS_PROD_ENVIRONMENT_NAME}
  variables:
    # kosko options
    KOSKO_GENERATE_ARGS: --env prod jobs/ingester-elasticsearch
