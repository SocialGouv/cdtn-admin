#
#
#

üê≥ register hasura:
  extends:
    - .base_register_kaniko_stage
    - .cdtn_base_rules
  variables:
    CONTEXT: ./targets/hasura
    DOCKER_BUILD_ARGS: >-
      --dockerfile ./targets/hasura/Dockerfile
    IMAGE_NAME: cdtn-admin-hasura

#
#
#

# todo: restrict to branches ?
‚è™ Restore data:
  extends:
    - .base_deploy_kosko_stage
    - .cdtn_base_rules
  stage: .post
  cache:
    key:
      files:
        - .k8s/yarn.lock
      prefix: k8s
    paths:
      - .cache
      - .k8s/node_modules
  environment:
    name: ${AUTO_DEVOPS_PROD_ENVIRONMENT_NAME}
  needs:
    - job: Notify Starting Deployment
  allow_failure: true
  variables:
    AUTO_DEVOPS_ENABLE_KAPP: "üïπÔ∏è"
    KOSKO_GENERATE_ARGS: --env dev jobs/restore
  before_script:
    - |
      if [[ "${CDTN_FORCE_RESTORE_DB}" == "true" ]]; then
        export KAPP_DEPLOY_ARGS="--apply-default-update-strategy=always-replace"
      fi

#
#
#

üöß Cleanup db cronjob (prod):
  extends:
    - .base_deploy_kosko_stage
    - .cdtn_base_rules
  rules:
    - if: "$PRODUCTION && $CI_COMMIT_TAG"
      when: always
  cache:
    key:
      files:
        - .k8s/yarn.lock
      prefix: k8s
    paths:
      - .cache
      - .k8s/node_modules
  environment:
    name: ${AUTO_DEVOPS_PROD_ENVIRONMENT_NAME}
  variables:
    KOSKO_GENERATE_ARGS: --env prod jobs/cleanup-db
