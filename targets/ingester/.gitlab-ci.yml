#
#
#

üß∂ install ingester:
  extends:
    - .autodevops_install
    - .cdtn_base_rules
  image: node:14.16.0-alpine3.11
  cache:
    key:
      files:
        - yarn.lock
      prefix: ${CI_JOB_NAME}
    paths:
      - .cache
  script:
    - yarn global add @socialgouv/yarn-workspace-focus-install
    - yarn exec yarn-workspace-focus-install
      --
      --cwd targets/ingester
      --
      --frozen-lockfile --prefer-offline
  artifacts:
    expire_in: 1 week
    paths:
      - targets/ingester/node_modules
      - node_modules

#
#
#

üÉè test ingester:
  extends:
    - .autodevops_test
    - .cdtn_base_rules
  needs:
    - job: üß∂ install ingester
      artifacts: true
  before_script:
    - cd targets/ingester

üî¨ lint ingester:
  extends:
    - .autodevops_lint
    - .cdtn_base_rules
  needs:
    - job: üß∂ install ingester
      artifacts: true
  before_script:
    - cd targets/ingester
  script:
    - yarn types
    - yarn lint

#
#
#

üì¶ build ingester:
  extends:
    - .base_yarn_script
    - .cdtn_base_rules
  image: node:14.16.0-alpine3.11
  needs:
    - job: üß∂ install ingester
      artifacts: true
  before_script:
    - cd targets/ingester
  script:
    - yarn build
  artifacts:
    expire_in: 1 week
    paths:
      - targets/ingester/dist

#
#
#

üê≥ register ingester:
  extends:
    - .autodevops_register_image
    - .cdtn_base_rules
  needs:
    - job: üì¶ build ingester
      artifacts: true
  variables:
    CONTEXT: .
    DOCKER_BUILD_ARGS: >-
      --shm-size 512M
      -f ./targets/ingester/Dockerfile
    IMAGE_NAME: $CI_REGISTRY_IMAGE/ingester

#
#
#

.trigger_ingester_cron:
  needs:
    - job: üõÇ k8s test
  before_script:
    - echo "kubectl config set-context --current --namespace=${K8S_NAMESPACE}"
    - kubectl config set-context --current --namespace=${K8S_NAMESPACE}
  script:
    - JOB_NAME="triggered-from-job-${CI_JOB_ID}-${RANDOM}"
    - kubectl create job --from=cronjob.batch/ingester "${JOB_NAME}"

    - timeout 15m
      bash -c "
      until
      kubectl get pod -l job-name=${JOB_NAME}
      -o jsonpath='{.items[0].status.conditions[?(@.type==\"ContainersReady\")].status}' |
      grep True
      ; do sleep 1; done"

    - kubectl logs -f job/${JOB_NAME}

    - kubectl get jobs ${JOB_NAME} -o jsonpath='{.status.conditions}'
    - kubectl get jobs ${JOB_NAME} -o jsonpath='{.status.conditions[?(@.type=="Complete")].status}'

üõéÔ∏è Trigger Ingester (review):
  extends:
    - .autodevops_review
    - .trigger_ingester_cron
  rules:
    - if: "$PRODUCTION || $TRIGGER || $CI_COMMIT_TAG"
      when: never
    - when: manual
      allow_failure: true
  environment:
    name: ${CI_COMMIT_REF_NAME}${AUTO_DEVOPS_DEV_ENVIRONMENT_NAME}

üõéÔ∏è Trigger Ingester (preprod):
  extends:
    - .autodevops_preprod
    - .trigger_ingester_cron
  rules:
    - if: "$PRODUCTION || $TRIGGER"
      when: never
    - if: "$CI_COMMIT_TAG"
      when: manual
      allow_failure: true
  environment:
    name: preprod${AUTO_DEVOPS_PREPROD_ENVIRONMENT_NAME}

üéâ Trigger Ingester (prod):
  extends:
    - .autodevops_production
    - .trigger_ingester_cron
  needs: []
  rules:
    - if: "$PRODUCTION && $CI_COMMIT_TAG"
      when: manual
      allow_failure: true
  environment:
    name: ${AUTO_DEVOPS_PROD_ENVIRONMENT_NAME}
