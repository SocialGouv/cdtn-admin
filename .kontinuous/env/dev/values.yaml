hasura:
  imagePackage: hasura
  ~needs: [post-restore, build-hasura]
  ~preDeploy.cleaner:
    match:
      kind: Deployment
    value: true
  envFrom:
    - secretRef:
        name: pg-app
    - configMapRef:
        name: hasura
    - secretRef:
        name: hasura
  replicas: 2
  resources:
    limits:
      cpu: "2000m"
      memory: "4Gi"
    requests:
      cpu: "1000m"
      memory: "1Gi"

export:
  env:
    - name: "BRANCH_NAME_SLUG"
      value: "{{.Values.global.branchSlug32}}"
  resources:
    limits:
      cpu: "2000m"
      memory: "4Gi"
    requests:
      cpu: "1000m"
      memory: "1Gi"

pg:
  ~preDeploy.cleaner:
    value: true

jobs:
  runs:
    restore:
      ~needs: [pg]
      use: pg-restore
      checkout: false
      with:
        mountPath: /mnt/restore
        filterPath: "hasura_prod_db.psql.gz"
        restorePath: "${LATEST}"
        pgAdminUserSecretRefName: pg-app
      env: # there is a bug when setting custom job env, so we have to repeat "with" vars here
        - name: RESTORE_PATH
          value: "${LATEST}"
        - name: OWNER
          value: "{{ $.Values.global.pgUser }}"
        - name: MOUNT_PATH
          value: /mnt/restore
        - name: FILTER_PATH
          value: hasura_prod_db.psql.gz
        - name: PGHOST
          value: "pg-rw"
        - name: PGDATABASE
          value: "{{ $.Values.global.pgDatabase }}"
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: pg-superuser
              key: password
        - name: PGUSER
          valueFrom:
            secretKeyRef:
              name: pg-superuser
              key: user
      volumeMounts:
        - name: restore
          mountPath: /mnt/restore
          readOnly: true
      volumes:
        - name: restore
          csi:
            driver: file.csi.azure.com
            readOnly: true
            volumeAttributes:
              secretName: cdtnadminprodserver-backup-credentials
              shareName: cdtnadminprodserver-backup-restore
    post-restore:
      ~needs: [restore]
      use: psql
      with:
        sqlFile: .kontinuous/sql/post-restore.sql
        pgSecretRefName: pg-app
    job-ingester:
      ~needs: [hasura]
      use: trigger-cronjob
      with:
        cronJobName: cron-ingester
    job-alert:
      ~needs: [job-ingester]
      use: trigger-cronjob
      with:
        cronJobName: cron-alert
